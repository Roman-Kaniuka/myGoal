<?xml version="1.0"?>
<doc>
    <assembly>
        <name>myGoal.Api</name>
    </assembly>
    <members>
        <member name="M:myGoal.Api.Controllers.AuthController.Register(myGoal.Domain.Dto.User.RegisterUserDto)">
            <summary>
            Реєстрація користувача
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:myGoal.Api.Controllers.AuthController.Login(myGoal.Domain.Dto.User.LoginUserDto)">
            <summary>
            Авторизація користувача
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:myGoal.Api.Controllers.ReportController.GetReport(System.Int64)">
            <summary>
            Отримання звіту за id
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                GET
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Якщо звіт був знайдений за id</response>
            <response code="400">Якщо звіт не був знайдений за id</response>
        </member>
        <member name="M:myGoal.Api.Controllers.ReportController.GetUserReport(System.Int64)">
            <summary>
            Отримання звіту за userId
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                GET
                {
                    "userId": "1"
                }
            </remarks>
            <response code="200">Якщо звіт був знайдений за userId</response>
            <response code="400">Якщо звіт не був знайдений за userId</response>
        </member>
        <member name="M:myGoal.Api.Controllers.ReportController.DeleteReport(System.Int64)">
            <summary>
            Видалення звіту
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                DELTE
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Якщо звіт був видалений</response>
            <response code="400">Якщо звіт не був видалений</response>
        </member>
        <member name="M:myGoal.Api.Controllers.ReportController.CreateReport(myGoal.Domain.Dto.Report.CreateReportDto)">
            <summary>
            Створення звіту
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                POST
                {
                    "name": "Report #1",
                    "description": "Test report",
                    "userId": "1"
                }
            </remarks>
            <response code="200">Якщо звіт був створений</response>
            <response code="400">Якщо звіт не був створений</response>
        </member>
        <member name="M:myGoal.Api.Controllers.ReportController.UpdateReport(myGoal.Domain.Dto.Report.UpdateReportDto)">
            <summary>
            Оновлення звіту
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                PUT
                {
                    "id": "1",
                    "name": "Report #1",
                    "description": "Test report"
                }
            </remarks>
            <response code="200">Якщо звіт був оновлений</response>
            <response code="400">Якщо звіт не був оновлений</response>
        </member>
        <member name="M:myGoal.Api.Controllers.RoleController.CreateRole(myGoal.Domain.Dto.Role.CreateRoleDto)">
            <summary>
            Створення ролі
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                POST
                {
                    "name": "Admin",
                }
            </remarks>
            <response code="200">Якщо роль було створено</response>
            <response code="400">Якщо роль не було створено</response>
        </member>
        <member name="M:myGoal.Api.Controllers.RoleController.DeleteRole(System.Int64)">
            <summary>
            Видалення ролі
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                DELETE
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Якщо роль було видалено</response>
            <response code="400">Якщо роль не було видалено</response>
        </member>
        <member name="M:myGoal.Api.Controllers.RoleController.UpdateRole(myGoal.Domain.Dto.Role.RoleDto)">
            <summary>
            Оновлення ролі
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                PUT
                {
                    "id": "1",
                    "name": "Admin",
                }
            </remarks>
            <response code="200">Якщо роль була оновлена</response>
            <response code="400">Якщо роль не була оновлена</response>
        </member>
        <member name="M:myGoal.Api.Controllers.RoleController.AddRoleForUser(myGoal.Domain.Dto.UserRole.UserRoleDto)">
            <summary>
            Присвоєння ролі користувачу
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                POST
                {
                    "login": "User #1",
                    "roleName": "Admin"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="M:myGoal.Api.Controllers.RoleController.DeleteRoleForUser(myGoal.Domain.Dto.UserRole.DeleteUserRoleDto)">
            <summary>
            Видалення ролі у користувача
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                DELETE
                {
                    "login": "User #1",
                    "roleName": "Admin"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="M:myGoal.Api.Controllers.RoleController.UpdateRoleForUser(myGoal.Domain.Dto.UserRole.UpdateUserRoleDto)">
            <summary>
            Оновлення ролі у користувача
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                PUT
                {
                    "login": "User #1",
                    "fromRoleName": "User"
                    "toRoleName": "Admin"
                }
            </remarks>
            <response code="200">Якщо роль було присвоєно</response>
            <response code="400">Якщо роль не було присвоєно</response>
        </member>
        <member name="T:myGoal.Api.Controllers.TokenController">
            <summary>
            
            </summary>
        </member>
        <member name="M:myGoal.Api.Startup.AddAuthenticationAndAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Підключення аутентифікації та авторизації
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:myGoal.Api.Startup.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Підключення Swagger
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
